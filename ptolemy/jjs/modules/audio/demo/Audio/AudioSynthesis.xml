<?xml version="1.0" standalone="no"?>
<!DOCTYPE entity PUBLIC "-//UC Berkeley//DTD MoML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/MoML_1.dtd">
<entity name="AudioSynthesis" class="ptolemy.actor.TypedCompositeActor">
    <property name="_createdBy" class="ptolemy.kernel.attributes.VersionAttribute" value="11.0.devel">
    </property>
    <property name="DE Director" class="ptolemy.domains.de.kernel.DEDirector">
        <property name="stopTime" class="ptolemy.data.expr.Parameter" value="5.0">
        </property>
        <property name="stopWhenQueueIsEmpty" class="ptolemy.data.expr.Parameter" value="false">
        </property>
        <property name="synchronizeToRealTime" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{70.0, 50.0}">
        </property>
    </property>
    <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute" value="{bounds={208, 157, 945, 676}, maximized=false}">
    </property>
    <property name="_vergilSize" class="ptolemy.actor.gui.SizeAttribute" value="[711, 566]">
    </property>
    <property name="_vergilZoomFactor" class="ptolemy.data.expr.ExpertParameter" value="1.0">
    </property>
    <property name="_vergilCenter" class="ptolemy.data.expr.ExpertParameter" value="{355.5, 283.0}">
    </property>
    <property name="Annotation" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="This demo illustrates a simple use of the AudioPlayer&#10;accessor to play a synthesized sound.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{10.0, 80.0}">
        </property>
    </property>
    <property name="Annotation4" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textSize" class="ptolemy.data.expr.Parameter" value="18">
        </property>
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.0,0.0,0.0,1.0}">
        </property>
        <property name="bold" class="ptolemy.data.expr.Parameter" value="true">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Synthesize a Sound">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{135.0, 15.0}">
        </property>
    </property>
    <property name="Annotation2" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="The feedback loop regulates the sound production&#10;so it does not get ahead of the audio hardware and&#10;overwrite its buffers.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{15.0, 230.0}">
        </property>
    </property>
    <property name="Annotation5" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="See the SpeechSynthesis model.">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{20.0, 305.0}">
        </property>
        <property name="LiveLink" class="ptolemy.actor.gui.LiveLink" value="$CLASSPATH/ptolemy/actor/lib/jjs/modules/audio/demo/Audio/SpeechSynthesis.xml">
            <property name="_hideName" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
            <property name="_icon" class="ptolemy.vergil.icon.ValueIcon">
                <property name="_color" class="ptolemy.actor.gui.ColorAttribute" value="{0.0, 0.0, 1.0, 1.0}">
                </property>
            </property>
            <property name="_smallIconDescription" class="ptolemy.kernel.util.SingletonConfigurableAttribute">
                <configure>
      <svg>
        <text x="20" style="font-size:14; font-family:SansSerif; fill:blue" y="20">LL</text>
      </svg>
    </configure>
            </property>
            <property name="_editorFactory" class="ptolemy.vergil.toolbox.VisibleParameterEditorFactory">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{395, 280}">
            </property>
        </property>
        <property name="IconLink" class="ptolemy.vergil.basic.export.web.IconLink" value="http://ptolemy.eecs.berkeley.edu/ptolemyII/ptII11.0/ptII/ptolemy/actor/lib/jjs/modules/audio/demo/Audio/SpeechSynthesis/index.html">
            <property name="linkTarget" class="ptolemy.vergil.basic.export.web.LinkTarget" value="_self">
            </property>
            <property name="_location" class="ptolemy.kernel.util.Location" value="{450, 180}">
            </property>
        </property>
    </property>
    <property name="Annotation3" class="ptolemy.vergil.kernel.attributes.TextAttribute">
        <property name="textColor" class="ptolemy.actor.gui.ColorAttribute" value="{0.6,0.6,0.6,1.0}">
        </property>
        <property name="text" class="ptolemy.kernel.util.StringAttribute" value="Author: Edward A. Lee">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{10.0, 350.0}">
        </property>
    </property>
    <property name="_layoutConfiguration" class="ptolemy.vergil.basic.layout.ActorLayoutConfiguration">
        <property name="includeDecorations" class="ptolemy.data.expr.Parameter" value="false">
            <display name="Include decorations"/>
        </property>
    </property>
    <entity name="AudioPlayer" class="org.terraswarm.accessor.JSAccessor">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
        </property>
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="// Copyright (c) 2015-2017 The Regents of the University of California.&#10;// All rights reserved.&#10;//&#10;// Permission is hereby granted, without written agreement and without&#10;// license or royalty fees, to use, copy, modify, and distribute this&#10;// software and its documentation for any purpose, provided that the above&#10;// copyright notice and the following two paragraphs appear in all copies&#10;// of this software.&#10;//&#10;// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY&#10;// FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES&#10;// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF&#10;// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF&#10;// SUCH DAMAGE.&#10;//&#10;// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,&#10;// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF&#10;// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE&#10;// PROVIDED HEREUNDER IS ON AN &quot;AS IS&quot; BASIS, AND THE UNIVERSITY OF&#10;// CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,&#10;// ENHANCEMENTS, OR MODIFICATIONS.&#10;//&#10;&#10;/** Accessor to play an audio signal.&#10; *  This accessor accepts as input in a variety of formats and plays&#10; *  back the audio encoded in those input values.&#10; *&#10; *  This accessor queues the data to be played by the audio system.&#10; *  When the data has been accepted by the audio system to be played,&#10; *  it produces an output with value true. That output should be used&#10; *  as a trigger to provide more audio data. If that new output data&#10; *  is provided before the previously data has been drained by the audio&#10; *  queue, then continuous audio with no gaps is possible.&#10; *  If on the other hand input data is provided too quickly, then it&#10; *  will overwrite the data in the output buffer, thereby creating&#10; *  considerable distortion. If it is provided too slowly, then there&#10; *  will be gaps in the output audio.&#10; *&#10; *  The _inputFormat_ parameter specifies the form in which the audio&#10; *  input will be provided. The available formats include:&#10; *&#10; *  * &quot;raw&quot;: The input is a byte array representing audio data exactly as&#10; *    captured by default on the host.&#10; *  * &quot;array&quot;: The audio input data is an array of arrays of numbers,&#10; *    where each number is in the range from -1.0 to 1.0.&#10; *    The first index of the input specifies the channel number.&#10; *  * &quot;encoded&quot;: The audio input data is a byte array containing audio&#10; *    data encoded in one of the file format standards such as&#10; *    AIFF (historically associated with Apple computers),&#10; *    AIFF-C (a compressed version of AIFF),&#10; *    AU (historically associated with Sun Microsystems and Unix computers), or&#10; *    WAVE (historically associated with Windows PCs).&#10; *&#10; *  The _playbackOptions_ parameter is an object with the following properties,&#10; *  all of which are optional:&#10; *&#10; *  * _bigEndian_: 1 if the the sample is big endian, 0 if it is little endian&#10; *    If _bigEndian_ is not present, then the default is big endian.&#10; *  * _bitsPerSample_: The number of bits per sample. This is an integer that&#10; *    defaults to 16.&#10; *  * _channels_: The number of channels. This defaults to 1.&#10; *  * _sampleRate_: The sample rate. This is an integer that defaults to 8000.&#10; *    Typical supported sample rates are 8000, 11025, 22050, 44100, and 48000.&#10; *&#10; *  WAVE (aka .wav) is 16 bits, 1 channel, little endian, 44100 Hz.&#10;&#10; *  This accessor requires the optional 'audio' module, which may or may&#10; *  not be provided by an accessor host. Moreover, a host may not support&#10; *  all capture formats and all output formats.&#10; *&#10; *  @input input The audio data.&#10; *  @output accepted An indicator that the audio data has been queued&#10; *   to the audio system.&#10; *  @parameter inputFormat The format of the input data.&#10; *  @parameter playbackOptions The playback options.&#10; *&#10; *  @accessor audio/AudioPlayer&#10; *  @author Edward A. Lee (eal@eecs.berkeley.edu)&#10; *  @version $$Id$$&#10; */&#10;&#10;// Stop extra messages from jslint and jshint.  Note that there should be no&#10;// space between the / and the * and global. See https://chess.eecs.berkeley.edu/ptexternal/wiki/Main/JSHint */&#10;/*globals exports, require*/&#10;/*jshint globalstrict: true*/&#10;&quot;use strict&quot;;&#10;&#10;// Set up the accessor.&#10;exports.setup = function () {&#10;    this.input('input');&#10;    this.output('accepted', {&#10;        type: 'boolean',&#10;        spontaneous: true&#10;    });&#10;    this.parameter('inputFormat', {&#10;        type: 'string',&#10;        value: 'raw',&#10;        options: ['raw', 'array', 'encoded']&#10;    });&#10;    this.parameter('playbackOptions', {&#10;        value: {&#10;            bitsPerSample: 16,&#10;            channels: 1,&#10;            sampleRate: 8000&#10;        }&#10;    });&#10;};&#10;&#10;var player = null;&#10;var audio = require(&quot;audio&quot;);&#10;&#10;exports.initialize = function () {&#10;    var self = this;&#10;    player = new audio.Player(&#10;        self.getParameter('inputFormat'),&#10;        self.getParameter('playbackOptions'));&#10;    self.addInputHandler('input', function () {&#10;        // FIXME: Input format.&#10;        player.play(self.get('input'), function () {&#10;            self.send('accepted', true);&#10;        });&#10;    });&#10;};&#10;&#10;exports.wrapup = function () {&#10;    if (player !== null) {&#10;        player.stop();&#10;        player = null;&#10;    }&#10;};&#10;">
        </property>
        <property name="accessorSource" class="org.terraswarm.accessor.JSAccessor$ActionableAttribute" value="https://accessors.org/audio/AudioPlayer.js">
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{235.0, 175.0}">
        </property>
        <property name="documentation" class="ptolemy.vergil.basic.DocAttribute">
            <property name="description" class="ptolemy.kernel.util.StringAttribute" value="&lt;p&gt;Accessor to play an audio signal.&#10; This accessor accepts as input in a variety of formats and plays&#10; back the audio encoded in those input values.&lt;/p&gt;&#10;&lt;p&gt; This accessor queues the data to be played by the audio system.&#10; When the data has been accepted by the audio system to be played,&#10; it produces an output with value true. That output should be used&#10; as a trigger to provide more audio data. If that new output data&#10; is provided before the previously data has been drained by the audio&#10; queue, then continuous audio with no gaps is possible.&#10; If on the other hand input data is provided too quickly, then it&#10; will overwrite the data in the output buffer, thereby creating&#10; considerable distortion. If it is provided too slowly, then there&#10; will be gaps in the output audio.&lt;/p&gt;&#10;&lt;p&gt; The &lt;em&gt;inputFormat&lt;/em&gt; parameter specifies the form in which the audio&#10; input will be provided. The available formats include:&lt;/p&gt;&#10;&lt;ul&gt;&#10;&lt;li&gt;&amp;quot;raw&amp;quot;: The input is a byte array representing audio data exactly as&#10;captured by default on the host.&lt;/li&gt;&#10;&lt;li&gt;&amp;quot;array&amp;quot;: The audio input data is an array of arrays of numbers,&#10;where each number is in the range from -1.0 to 1.0.&#10;The first index of the input specifies the channel number.&lt;/li&gt;&#10;&lt;li&gt;&lt;p&gt;&amp;quot;encoded&amp;quot;: The audio input data is a byte array containing audio&#10;data encoded in one of the file format standards such as&#10;AIFF (historically associated with Apple computers),&#10;AIFF-C (a compressed version of AIFF),&#10;AU (historically associated with Sun Microsystems and Unix computers), or&#10;WAVE (historically associated with Windows PCs).&lt;/p&gt;&#10;&lt;p&gt;The &lt;em&gt;playbackOptions&lt;/em&gt; parameter is an object with the following properties,&#10;all of which are optional:&lt;/p&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;&lt;p&gt;&lt;em&gt;bigEndian&lt;/em&gt;: 1 if the the sample is big endian, 0 if it is little endian&#10;If &lt;em&gt;bigEndian&lt;/em&gt; is not present, then the default is big endian.&lt;/p&gt;&#10;&lt;/li&gt;&#10;&lt;li&gt;&lt;em&gt;bitsPerSample&lt;/em&gt;: The number of bits per sample. This is an integer that&#10;defaults to 16.&lt;/li&gt;&#10;&lt;li&gt;&lt;em&gt;channels&lt;/em&gt;: The number of channels. This defaults to 1.&lt;/li&gt;&#10;&lt;li&gt;&lt;p&gt;&lt;em&gt;sampleRate&lt;/em&gt;: The sample rate. This is an integer that defaults to 8000.&#10;Typical supported sample rates are 8000, 11025, 22050, 44100, and 48000.&lt;/p&gt;&#10;&lt;p&gt;WAVE (aka .wav) is 16 bits, 1 channel, little endian, 44100 Hz.&#10;This accessor requires the optional 'audio' module, which may or may&#10;not be provided by an accessor host. Moreover, a host may not support&#10;all capture formats and all output formats.&lt;/p&gt;&#10;&lt;/li&gt;&#10;&lt;/ul&gt;">
            </property>
            <property name="author" class="ptolemy.kernel.util.StringAttribute" value="Edward A. Lee (eal@eecs.berkeley.edu)">
            </property>
            <property name="version" class="ptolemy.kernel.util.StringAttribute" value="$$Id$$">
            </property>
            <property name="input (port)" class="ptolemy.kernel.util.StringAttribute" value="The audio data.">
            </property>
            <property name="accepted (port)" class="ptolemy.kernel.util.StringAttribute" value="An indicator that the audio data has been queued&#10;  to the audio system.">
            </property>
            <property name="inputFormat (parameter)" class="ptolemy.kernel.util.StringAttribute" value="The format of the input data.">
            </property>
            <property name="playbackOptions (parameter)" class="ptolemy.kernel.util.StringAttribute" value="The playback options.">
            </property>
        </property>
        <property name="inputFormat" class="ptolemy.data.expr.Parameter" value="array">
            <property name="_stringMode" class="ptolemy.kernel.util.SingletonAttribute">
            </property>
        </property>
        <property name="playbackOptions" class="ptolemy.data.expr.Parameter" value="{bitsPerSample = 16, channels = 1, sampleRate = 8000}">
        </property>
        <port name="input" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
        </port>
        <port name="accepted" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
            <property name="_spontaneous" class="ptolemy.data.expr.SingletonParameter" value="true">
            </property>
        </port>
    </entity>
    <entity name="JavaScript" class="ptolemy.actor.lib.jjs.JavaScript">
        <property name="_windowProperties" class="ptolemy.actor.gui.WindowPropertiesAttribute">
        </property>
        <property name="_paneSize" class="ptolemy.actor.gui.SizeAttribute">
        </property>
        <property name="script" class="ptolemy.actor.parameters.PortParameter" value="exports.setup = function() {&#10;	this.input('trigger');&#10;	this.output('audio');&#10;}&#10;exports.initialize = function() {&#10;	var self = this;&#10;	var n = 0;&#10;	var frequency = 220;&#10;	var step = 1.00002;&#10;	function generateSamples() {&#10;		var samples = [];&#10;		for (var i = 0; i &lt; 128; i++) {&#10;			samples[i] = Math.sin(2 * Math.PI * frequency * n++/ 8000);&#10;			frequency = frequency * step;&#10;		}&#10;		self.send('audio', [samples]);&#10;	}&#10;	this.addInputHandler('trigger', generateSamples);&#10;	generateSamples();&#10;}&#10;">
            <property name="style" class="ptolemy.actor.gui.style.NoteStyle">
                <property name="note" class="ptolemy.kernel.util.StringAttribute" value="NOTE: To see the script, invoke Open Actor">
                </property>
            </property>
        </property>
        <property name="_tableauFactory" class="ptolemy.vergil.toolbox.TextEditorTableauFactory">
            <property name="attributeName" class="ptolemy.kernel.util.StringAttribute" value="script">
            </property>
            <property name="syntaxStyle" class="ptolemy.kernel.util.StringAttribute" value="text/javascript">
            </property>
        </property>
        <property name="_location" class="ptolemy.kernel.util.Location" value="{100.0, 175.0}">
        </property>
        <port name="trigger" class="ptolemy.actor.TypedIOPort">
            <property name="input"/>
        </port>
        <port name="audio" class="ptolemy.actor.TypedIOPort">
            <property name="output"/>
        </port>
    </entity>
    <relation name="relation6" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;AudioPlayer.input&quot;,x=235.0,y=175.0}, tail={id=&quot;JavaScript.audio&quot;,x=100.0,y=175.0}, points={} } }">
        </property>
    </relation>
    <relation name="relation7" class="ptolemy.actor.TypedIORelation">
        <property name="_layoutHint" class="ptolemy.vergil.actor.LayoutHint" value="{ { head={id=&quot;AudioPlayer.accepted&quot;,x=235.0,y=175.0}, tail={id=&quot;JavaScript.trigger&quot;,x=100.0,y=175.0}, points={315.0,175.0,315.0,130.0,20.0,130.0,20.0,175.0} } }">
        </property>
    </relation>
    <link port="AudioPlayer.input" relation="relation6"/>
    <link port="AudioPlayer.accepted" relation="relation7"/>
    <link port="JavaScript.trigger" relation="relation7"/>
    <link port="JavaScript.audio" relation="relation6"/>
</entity>
